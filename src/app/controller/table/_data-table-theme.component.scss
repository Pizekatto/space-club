@use 'sass:map';
@use '@angular/material' as mat;

@mixin ligth-color($theme) {
  $color-config: mat.get-color-config($theme);
  $primary-palette: map.get($color-config, 'primary');
  $accent-palette: map.get($color-config, 'accent');

  app-data-table {
    background-color: rgba(255, 255, 255, 0.7);
  }
  .logo {
    color: #737373;
    text-shadow: -1px -1px 2px #737373;
  }
  form {
    color: #333;
    @media (max-width: 991px), (max-height: 700px) {
      background-color: #fff;
    }
  }
  a {
    color: mat.get-color-from-palette($primary-palette, '50-contrast');
    &:hover {
      color: deeppink;
    }
  }
  .logo {
    color: rgba(0, 0, 0, 0.8);
    text-shadow: -1px -1px 1px rgba(0, 0, 0, 0.4);
  }
  main {
    &::-webkit-scrollbar-thumb {
      background: rgba(0, 0, 0, 0.6);
    }
    &::after {
      background-image: linear-gradient(
        0deg,
        rgba(255, 255, 255, 0.9) 0%,
        rgba(255, 255, 255, 0.9) 90%,
        transparent 100%
      );
    }
  }
  .mat-mdc-table mat-row.mat-mdc-row {
    &:hover {
      background-color: rgba(255, 255, 255, 0.2);
    }
    &:active {
      background-color: rgba(255, 255, 255, 0.3);
    }
  }

  .mdc-icon-button.mat-mdc-icon-button {
    &.select-place {
      &:hover {
        color: mat.get-color-from-palette($primary-palette, 500);
      }
    }
    &.plus:not([disabled]) {
      color: #00b729;
      &:hover {
        color: #009120;
      }
    }
    &.save:not([disabled]) {
      color: #009d23;
    }
    &.cancel:not([disabled]) {
      color: #e30000;
    }
    &.control {
      color: #bdbdbd;
      &-delete:hover {
        color: #e30000;
      }
    }
  }
}

@mixin dark-color($theme) {
  $color-config: mat.get-color-config($theme);
  $primary-palette: map.get($color-config, 'primary');
  $accent-palette: map.get($color-config, 'accent');

  app-data-table {
    background-color: rgba(0, 0, 0, 0.5);
    border: 2px solid rgba(255, 255, 255, 0.1);
  }
  .logo {
    color: #b7b7b7;
    text-shadow: -1px -1px 2px #2f2e2e;
  }
  form {
    color: #fff;
    @media (max-width: 991px), (max-height: 700px) {
      background-color: #003e7c;
    }
  }
  a {
    color: white;
  }
  .logo {
    color: rgba(255, 255, 255, 0.8);
    text-shadow: -1px -1px 1px rgba(0, 0, 0, 0.4);
  }
  main {
    &::-webkit-scrollbar-thumb {
      background: rgba(0, 0, 0, 0.6);
    }
    &::after {
      background-image: linear-gradient(0deg, rgba(0, 0, 0, 0.85) 0%, rgba(0, 0, 0, 0.8) 90%, transparent 100%);
    }
  }
  mat-row.mat-mdc-row {
    &:hover {
      background-color: rgba(0, 0, 0, 0.03);
    }
    &:active {
      background-color: rgba(0, 0, 0, 0.1);
    }
  }

  .mat-mdc-cell {
    border-bottom-color: rgba(0, 0, 0, 0.1);
  }

  .mdc-icon-button.mat-mdc-icon-button {
    &.select-place {
      &:hover {
        color: mat.get-color-from-palette($primary-palette, 500);
      }
    }
    &.plus:not([disabled]) {
      color: #00b729;
      &:hover {
        color: #00e733;
      }
    }
    &.save:not([disabled]) {
      color: #00ff39;
    }
    &.cancel:not([disabled]) {
      color: #ff0000;
    }
    &.control {
      color: #bdbdbd;
      &.delete:hover {
        color: #ff0000;
      }
    }
  }
}

@mixin typography($theme) {
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include ligth-color($theme);
  }

  $typography-config: mat.get-typography-config($theme);
  @if $typography-config != null {
    @include typography($theme);
  }
}
